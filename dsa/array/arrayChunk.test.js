// Generated by CodiumAI
const chunk = require('./arrayChunk')
describe('chunk', () => {

    // Splits array into equal-sized chunks when array length is a multiple of size
    it('should split array into equal-sized chunks when array length is a multiple of size', () => {
        const array = [1, 2, 3, 4, 5, 6];
        const size = 2;
        const result = chunk(array, size);
        expect(result).toEqual([[1, 2], [3, 4], [5, 6]]);
    });

    // Handles empty array input, returning an empty array
    it('should return an empty array when input array is empty', () => {
        const array = [];
        const size = 3;
        const result = chunk(array, size);
        expect(result).toEqual([]);
    });

    // Works correctly with size equal to 1, returning an array of single-element arrays
    it('should return array of single-element arrays when size is 1', () => {
        const array = [1, 2, 3, 4, 5];
        const size = 1;
        const result = chunk(array, size);
        expect(result).toEqual([[1], [2], [3], [4], [5]]);
    });

    // Handles arrays with mixed positive and negative numbers
    it('should split array into chunks with mixed positive and negative numbers', () => {
        const array = [1, -2, 3, -4, 5, -6];
        const size = 2;
        const result = chunk(array, size);
        expect(result).toEqual([[1, -2], [3, -4], [5, -6]]);
    });
});
