// Generated by CodiumAI
const isPrime = require('./primeNumber')
describe('isPrime', () => {

    // returns true for small prime numbers like 2, 3, 5, 7
    it('should return true for small prime numbers', () => {
        expect(isPrime(2)).toBe(true);
        expect(isPrime(3)).toBe(true);
        expect(isPrime(5)).toBe(true);
        expect(isPrime(7)).toBe(true);
    });

    // returns false for negative numbers
    it('should return false for negative numbers', () => {
        expect(isPrime(-1)).toBe(false);
        expect(isPrime(-10)).toBe(false);
        expect(isPrime(-100)).toBe(false);
    });

    // returns false for small non-prime numbers like 1, 4, 6, 8
    it('should return false for small non-prime numbers', () => {
        expect(isPrime(1)).toBe(false);
        expect(isPrime(4)).toBe(false);
        expect(isPrime(6)).toBe(false);
        expect(isPrime(8)).toBe(false);
    });

    // correctly identifies large prime numbers
    it('should return true for large prime numbers', () => {
        expect(isPrime(104729)).toBe(true); // 104729 is a large prime number
        expect(isPrime(1299709)).toBe(true); // 1299709 is a large prime number
        expect(isPrime(15485863)).toBe(true); // 15485863 is a large prime number
    });

    // handles floating-point numbers by treating them as invalid input
    it('should return false for floating-point numbers', () => {
        expect(isPrime(2.5)).toBe(false);
        expect(isPrime(3.14)).toBe(false);
        expect(isPrime(7.0)).toBe(true);
    });
});
