// Generated by CodiumAI
const checkPalindrome = require('./palindrome')
describe('checkPalindrome', () => {

    // returns true for a simple palindrome like 'madam'
    it('should return true when input is a simple palindrome', () => {
        const input = 'madam';
        const result = checkPalindrome(input);
        expect(result).toBe(true);
    });

    // handles empty string input
    it('should return true when input is an empty string', () => {
        const input = '';
        const result = checkPalindrome(input);
        expect(result).toBe(true);
    });

    // handles mixed case palindromes like 'RaceCar'
    it('should return true when input is a mixed case palindrome', () => {
        const input = 'RaceCar';
        const result = checkPalindrome(input);
        expect(result).toBe(true);
    });

    // handles single character strings
    it('should return true when input is a single character', () => {
        const input = 'a';
        const result = checkPalindrome(input);
        expect(result).toBe(true);
    });

    // handles strings with only spaces
    it('should return true when input is a string with only spaces', () => {
        const input = '     ';
        const result = checkPalindrome(input);
        expect(result).toBe(true);
    });

    // handles numeric strings like '12321'
    it('should return true when input is a numeric palindrome', () => {
        const input = '12321';
        const result = checkPalindrome(input);
        expect(result).toBe(true);
    });

    // handles alphanumeric strings like 'A1B2B1A'
    it('should return true when input is an alphanumeric palindrome', () => {
        const input = 'A1B2B1A';
        const result = checkPalindrome(input);
        expect(result).toBe(true);
    });

    // returns false for a non-palindrome like 'hello'
    it('should return false for a non-palindrome like hello', () => {
        const input = 'hello';
        const result = checkPalindrome(input);
        expect(result).toBe(false);
    });
});
