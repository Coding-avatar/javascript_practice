// Generated by CodiumAI
const fizzbuzz = require('./fizzbuzz')
describe('fizzbuzz', () => {

    // prints numbers from 1 to input correctly
    it('should print numbers and fizzbuzz correctly when input is greater than 0', () => {
        const consoleSpy = jest.spyOn(console, 'log');
        fizzbuzz(15);
        expect(consoleSpy).toHaveBeenCalledWith(1);
        expect(consoleSpy).toHaveBeenCalledWith(2);
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith(4);
        expect(consoleSpy).toHaveBeenCalledWith('buzz');
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith(7);
        expect(consoleSpy).toHaveBeenCalledWith(8);
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith('buzz');
        expect(consoleSpy).toHaveBeenCalledWith(11);
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith(13);
        expect(consoleSpy).toHaveBeenCalledWith(14);
        expect(consoleSpy).toHaveBeenCalledWith('fizzbuzz');
        consoleSpy.mockRestore();
    });

    // handles input of 0 gracefully
    it('should not print anything when input is 0', () => {
        const consoleSpy = jest.spyOn(console, 'log');
        fizzbuzz(0);
        expect(consoleSpy).not.toHaveBeenCalled();
        consoleSpy.mockRestore();
    });

    // prints "fizz" for multiples of 3
    it('should print "fizz" for multiples of 3', () => {
        const consoleSpy = jest.spyOn(console, 'log');
        fizzbuzz(9);
        expect(consoleSpy).toHaveBeenCalledWith(1);
        expect(consoleSpy).toHaveBeenCalledWith(2);
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith(4);
        expect(consoleSpy).toHaveBeenCalledWith('buzz');
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith(7);
        expect(consoleSpy).toHaveBeenCalledWith(8);
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        consoleSpy.mockRestore();
    });

    // prints "buzz" for multiples of 5
    it('should print "buzz" for multiples of 5', () => {
        const consoleSpy = jest.spyOn(console, 'log');
        fizzbuzz(10);
        expect(consoleSpy).toHaveBeenCalledWith(1);
        expect(consoleSpy).toHaveBeenCalledWith(2);
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith(4);
        expect(consoleSpy).toHaveBeenCalledWith('buzz');
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith(7);
        expect(consoleSpy).toHaveBeenCalledWith(8);
        expect(consoleSpy).toHaveBeenCalledWith('fizz');
        expect(consoleSpy).toHaveBeenCalledWith('buzz');
        consoleSpy.mockRestore();
    });

});
